/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TimeTrackingIndexRouteImport } from './routes/time-tracking/index'
import { Route as TasksIndexRouteImport } from './routes/tasks/index'
import { Route as ManagementIndexRouteImport } from './routes/management/index'
import { Route as LegalIndexRouteImport } from './routes/legal/index'
import { Route as HomeIndexRouteImport } from './routes/home/index'
import { Route as CallbackIndexRouteImport } from './routes/callback/index'
import { Route as CalendarIndexRouteImport } from './routes/calendar/index'
import { Route as AccountIndexRouteImport } from './routes/account/index'
import { Route as TimeTrackingTimeoffIndexRouteImport } from './routes/time-tracking/timeoff/index'
import { Route as TimeTrackingRequestsIndexRouteImport } from './routes/time-tracking/requests/index'
import { Route as TasksWeeklyIndexRouteImport } from './routes/tasks/weekly/index'
import { Route as TasksTagsIndexRouteImport } from './routes/tasks/tags/index'
import { Route as TasksSprintsIndexRouteImport } from './routes/tasks/sprints/index'
import { Route as TasksPerformanceIndexRouteImport } from './routes/tasks/performance/index'
import { Route as ManagementUsersIndexRouteImport } from './routes/management/users/index'
import { Route as CalendarMeetingsIndexRouteImport } from './routes/calendar/meetings/index'
import { Route as ManagementUsersUserIdRouteImport } from './routes/management/users/$userId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TimeTrackingIndexRoute = TimeTrackingIndexRouteImport.update({
  id: '/time-tracking/',
  path: '/time-tracking/',
  getParentRoute: () => rootRouteImport,
} as any)
const TasksIndexRoute = TasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => rootRouteImport,
} as any)
const ManagementIndexRoute = ManagementIndexRouteImport.update({
  id: '/management/',
  path: '/management/',
  getParentRoute: () => rootRouteImport,
} as any)
const LegalIndexRoute = LegalIndexRouteImport.update({
  id: '/legal/',
  path: '/legal/',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => rootRouteImport,
} as any)
const CallbackIndexRoute = CallbackIndexRouteImport.update({
  id: '/callback/',
  path: '/callback/',
  getParentRoute: () => rootRouteImport,
} as any)
const CalendarIndexRoute = CalendarIndexRouteImport.update({
  id: '/calendar/',
  path: '/calendar/',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountIndexRoute = AccountIndexRouteImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => rootRouteImport,
} as any)
const TimeTrackingTimeoffIndexRoute =
  TimeTrackingTimeoffIndexRouteImport.update({
    id: '/time-tracking/timeoff/',
    path: '/time-tracking/timeoff/',
    getParentRoute: () => rootRouteImport,
  } as any)
const TimeTrackingRequestsIndexRoute =
  TimeTrackingRequestsIndexRouteImport.update({
    id: '/time-tracking/requests/',
    path: '/time-tracking/requests/',
    getParentRoute: () => rootRouteImport,
  } as any)
const TasksWeeklyIndexRoute = TasksWeeklyIndexRouteImport.update({
  id: '/tasks/weekly/',
  path: '/tasks/weekly/',
  getParentRoute: () => rootRouteImport,
} as any)
const TasksTagsIndexRoute = TasksTagsIndexRouteImport.update({
  id: '/tasks/tags/',
  path: '/tasks/tags/',
  getParentRoute: () => rootRouteImport,
} as any)
const TasksSprintsIndexRoute = TasksSprintsIndexRouteImport.update({
  id: '/tasks/sprints/',
  path: '/tasks/sprints/',
  getParentRoute: () => rootRouteImport,
} as any)
const TasksPerformanceIndexRoute = TasksPerformanceIndexRouteImport.update({
  id: '/tasks/performance/',
  path: '/tasks/performance/',
  getParentRoute: () => rootRouteImport,
} as any)
const ManagementUsersIndexRoute = ManagementUsersIndexRouteImport.update({
  id: '/management/users/',
  path: '/management/users/',
  getParentRoute: () => rootRouteImport,
} as any)
const CalendarMeetingsIndexRoute = CalendarMeetingsIndexRouteImport.update({
  id: '/calendar/meetings/',
  path: '/calendar/meetings/',
  getParentRoute: () => rootRouteImport,
} as any)
const ManagementUsersUserIdRoute = ManagementUsersUserIdRouteImport.update({
  id: '/management/users/$userId',
  path: '/management/users/$userId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/account': typeof AccountIndexRoute
  '/calendar': typeof CalendarIndexRoute
  '/callback': typeof CallbackIndexRoute
  '/home': typeof HomeIndexRoute
  '/legal': typeof LegalIndexRoute
  '/management': typeof ManagementIndexRoute
  '/tasks': typeof TasksIndexRoute
  '/time-tracking': typeof TimeTrackingIndexRoute
  '/management/users/$userId': typeof ManagementUsersUserIdRoute
  '/calendar/meetings': typeof CalendarMeetingsIndexRoute
  '/management/users': typeof ManagementUsersIndexRoute
  '/tasks/performance': typeof TasksPerformanceIndexRoute
  '/tasks/sprints': typeof TasksSprintsIndexRoute
  '/tasks/tags': typeof TasksTagsIndexRoute
  '/tasks/weekly': typeof TasksWeeklyIndexRoute
  '/time-tracking/requests': typeof TimeTrackingRequestsIndexRoute
  '/time-tracking/timeoff': typeof TimeTrackingTimeoffIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/account': typeof AccountIndexRoute
  '/calendar': typeof CalendarIndexRoute
  '/callback': typeof CallbackIndexRoute
  '/home': typeof HomeIndexRoute
  '/legal': typeof LegalIndexRoute
  '/management': typeof ManagementIndexRoute
  '/tasks': typeof TasksIndexRoute
  '/time-tracking': typeof TimeTrackingIndexRoute
  '/management/users/$userId': typeof ManagementUsersUserIdRoute
  '/calendar/meetings': typeof CalendarMeetingsIndexRoute
  '/management/users': typeof ManagementUsersIndexRoute
  '/tasks/performance': typeof TasksPerformanceIndexRoute
  '/tasks/sprints': typeof TasksSprintsIndexRoute
  '/tasks/tags': typeof TasksTagsIndexRoute
  '/tasks/weekly': typeof TasksWeeklyIndexRoute
  '/time-tracking/requests': typeof TimeTrackingRequestsIndexRoute
  '/time-tracking/timeoff': typeof TimeTrackingTimeoffIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/account/': typeof AccountIndexRoute
  '/calendar/': typeof CalendarIndexRoute
  '/callback/': typeof CallbackIndexRoute
  '/home/': typeof HomeIndexRoute
  '/legal/': typeof LegalIndexRoute
  '/management/': typeof ManagementIndexRoute
  '/tasks/': typeof TasksIndexRoute
  '/time-tracking/': typeof TimeTrackingIndexRoute
  '/management/users/$userId': typeof ManagementUsersUserIdRoute
  '/calendar/meetings/': typeof CalendarMeetingsIndexRoute
  '/management/users/': typeof ManagementUsersIndexRoute
  '/tasks/performance/': typeof TasksPerformanceIndexRoute
  '/tasks/sprints/': typeof TasksSprintsIndexRoute
  '/tasks/tags/': typeof TasksTagsIndexRoute
  '/tasks/weekly/': typeof TasksWeeklyIndexRoute
  '/time-tracking/requests/': typeof TimeTrackingRequestsIndexRoute
  '/time-tracking/timeoff/': typeof TimeTrackingTimeoffIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/account'
    | '/calendar'
    | '/callback'
    | '/home'
    | '/legal'
    | '/management'
    | '/tasks'
    | '/time-tracking'
    | '/management/users/$userId'
    | '/calendar/meetings'
    | '/management/users'
    | '/tasks/performance'
    | '/tasks/sprints'
    | '/tasks/tags'
    | '/tasks/weekly'
    | '/time-tracking/requests'
    | '/time-tracking/timeoff'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/account'
    | '/calendar'
    | '/callback'
    | '/home'
    | '/legal'
    | '/management'
    | '/tasks'
    | '/time-tracking'
    | '/management/users/$userId'
    | '/calendar/meetings'
    | '/management/users'
    | '/tasks/performance'
    | '/tasks/sprints'
    | '/tasks/tags'
    | '/tasks/weekly'
    | '/time-tracking/requests'
    | '/time-tracking/timeoff'
  id:
    | '__root__'
    | '/'
    | '/account/'
    | '/calendar/'
    | '/callback/'
    | '/home/'
    | '/legal/'
    | '/management/'
    | '/tasks/'
    | '/time-tracking/'
    | '/management/users/$userId'
    | '/calendar/meetings/'
    | '/management/users/'
    | '/tasks/performance/'
    | '/tasks/sprints/'
    | '/tasks/tags/'
    | '/tasks/weekly/'
    | '/time-tracking/requests/'
    | '/time-tracking/timeoff/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountIndexRoute: typeof AccountIndexRoute
  CalendarIndexRoute: typeof CalendarIndexRoute
  CallbackIndexRoute: typeof CallbackIndexRoute
  HomeIndexRoute: typeof HomeIndexRoute
  LegalIndexRoute: typeof LegalIndexRoute
  ManagementIndexRoute: typeof ManagementIndexRoute
  TasksIndexRoute: typeof TasksIndexRoute
  TimeTrackingIndexRoute: typeof TimeTrackingIndexRoute
  ManagementUsersUserIdRoute: typeof ManagementUsersUserIdRoute
  CalendarMeetingsIndexRoute: typeof CalendarMeetingsIndexRoute
  ManagementUsersIndexRoute: typeof ManagementUsersIndexRoute
  TasksPerformanceIndexRoute: typeof TasksPerformanceIndexRoute
  TasksSprintsIndexRoute: typeof TasksSprintsIndexRoute
  TasksTagsIndexRoute: typeof TasksTagsIndexRoute
  TasksWeeklyIndexRoute: typeof TasksWeeklyIndexRoute
  TimeTrackingRequestsIndexRoute: typeof TimeTrackingRequestsIndexRoute
  TimeTrackingTimeoffIndexRoute: typeof TimeTrackingTimeoffIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/time-tracking/': {
      id: '/time-tracking/'
      path: '/time-tracking'
      fullPath: '/time-tracking'
      preLoaderRoute: typeof TimeTrackingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/': {
      id: '/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof TasksIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/management/': {
      id: '/management/'
      path: '/management'
      fullPath: '/management'
      preLoaderRoute: typeof ManagementIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/legal/': {
      id: '/legal/'
      path: '/legal'
      fullPath: '/legal'
      preLoaderRoute: typeof LegalIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home/': {
      id: '/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/callback/': {
      id: '/callback/'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calendar/': {
      id: '/calendar/'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/': {
      id: '/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/time-tracking/timeoff/': {
      id: '/time-tracking/timeoff/'
      path: '/time-tracking/timeoff'
      fullPath: '/time-tracking/timeoff'
      preLoaderRoute: typeof TimeTrackingTimeoffIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/time-tracking/requests/': {
      id: '/time-tracking/requests/'
      path: '/time-tracking/requests'
      fullPath: '/time-tracking/requests'
      preLoaderRoute: typeof TimeTrackingRequestsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/weekly/': {
      id: '/tasks/weekly/'
      path: '/tasks/weekly'
      fullPath: '/tasks/weekly'
      preLoaderRoute: typeof TasksWeeklyIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/tags/': {
      id: '/tasks/tags/'
      path: '/tasks/tags'
      fullPath: '/tasks/tags'
      preLoaderRoute: typeof TasksTagsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/sprints/': {
      id: '/tasks/sprints/'
      path: '/tasks/sprints'
      fullPath: '/tasks/sprints'
      preLoaderRoute: typeof TasksSprintsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/performance/': {
      id: '/tasks/performance/'
      path: '/tasks/performance'
      fullPath: '/tasks/performance'
      preLoaderRoute: typeof TasksPerformanceIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/management/users/': {
      id: '/management/users/'
      path: '/management/users'
      fullPath: '/management/users'
      preLoaderRoute: typeof ManagementUsersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calendar/meetings/': {
      id: '/calendar/meetings/'
      path: '/calendar/meetings'
      fullPath: '/calendar/meetings'
      preLoaderRoute: typeof CalendarMeetingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/management/users/$userId': {
      id: '/management/users/$userId'
      path: '/management/users/$userId'
      fullPath: '/management/users/$userId'
      preLoaderRoute: typeof ManagementUsersUserIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountIndexRoute: AccountIndexRoute,
  CalendarIndexRoute: CalendarIndexRoute,
  CallbackIndexRoute: CallbackIndexRoute,
  HomeIndexRoute: HomeIndexRoute,
  LegalIndexRoute: LegalIndexRoute,
  ManagementIndexRoute: ManagementIndexRoute,
  TasksIndexRoute: TasksIndexRoute,
  TimeTrackingIndexRoute: TimeTrackingIndexRoute,
  ManagementUsersUserIdRoute: ManagementUsersUserIdRoute,
  CalendarMeetingsIndexRoute: CalendarMeetingsIndexRoute,
  ManagementUsersIndexRoute: ManagementUsersIndexRoute,
  TasksPerformanceIndexRoute: TasksPerformanceIndexRoute,
  TasksSprintsIndexRoute: TasksSprintsIndexRoute,
  TasksTagsIndexRoute: TasksTagsIndexRoute,
  TasksWeeklyIndexRoute: TasksWeeklyIndexRoute,
  TimeTrackingRequestsIndexRoute: TimeTrackingRequestsIndexRoute,
  TimeTrackingTimeoffIndexRoute: TimeTrackingTimeoffIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
